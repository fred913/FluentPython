
name: Executable Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:

    strategy:
      matrix:
        os: [macos-14, macos-13, ubuntu-latest, windows-latest]
      
    runs-on: ${{ matrix.os }}

    steps:
    
      # Check-out repository
      - uses: actions/checkout@v3
      
      # Setup Python
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.4'
          cache: 'pip'

      # Build python script into a stand-alone exe
      - run: |
          pip install pipenv
          pipenv update -d
          pipenv run nuitka --standalone --plugin-enable=pyside6 --macos-create-app-bundle --assume-yes-for-downloads --windows-icon-from-ico=./icon.ico --macos-app-icon FluentPython
      
      - name: Fix executable permissions (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          chmod +x FluentPython.app/Contents/MacOS/*

        
      # Uploads artifact
      - name: Upload Artifacts (Win/Linux)
        uses: actions/upload-artifact@v4
        if: ${{ runner.os != 'macOS' }}
        with:
          name: ${{ runner.os }} ${{ runner.arch }} Build
          path: |
            FluentPython.dist

      - name: Upload Artifacts (macOS)
        uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'macOS' }}
        with:
          name: ${{ runner.os }} ${{ runner.arch }} Build
          path: |
            FluentPython.app

